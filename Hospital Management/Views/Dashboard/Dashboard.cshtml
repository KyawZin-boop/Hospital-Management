@model Hospital_Management.Models.AdminResponseModel
@using Newtonsoft.Json
@{
    ViewBag.Title = ViewBag.ActiveTab == "Home" ? "Dashboard" : ViewBag.ActiveTab == "Patient" ? "Patients" : ViewBag.ActiveTab == "Doctor" ? "Doctors" : "Appointments";
    Layout = "~/Views/Shared/DashboardLayout.cshtml";
    int index = 0;
    int doctorIndex = 0;
    int patientIndex = 0;

    var last7Days = Enumerable.Range(0, 7)
        .Select(i => DateTime.Today.AddDays(-i))
        .Reverse()
        .ToList();

    string[] labels = last7Days.Select(d => d.ToString("MMM dd")).ToArray();
    int[] data = Model?.Appointments != null
        ? last7Days.Select(d => Model.Appointments.Count(a => a.AppointmentDate.Date == d.Date)).ToArray()
        : new int[7];
}

<div class="container-xxl flex-grow-1 container-p-y" style="background-color: #F8F8ff">
    @if (!string.IsNullOrEmpty(ViewBag.Error))
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.Error
        </div>
    }
    <h4 class="fw-bold py-3 mb-2">@ViewBag.Title</h4>
    <div class="row">
        @if (ViewBag.ActiveTab == "Home")
        {
            <div class="col-md-3">
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="me-3">
                                <span class="badge bg-primary rounded-circle p-3">
                                    <i class="bi bi-calendar fs-4"></i>
                                </span>
                            </div>
                            <div>
                                <h5 class="card-title mb-1">Appointments</h5>
                                <h3 class="mb-0">@(Model?.Appointments?.Count() ?? 0)</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="me-3">
                                <span class="badge bg-success rounded-circle p-3">
                                    <i class="bi bi-person-badge fs-4"></i>
                                </span>
                            </div>
                            <div>
                                <h5 class="card-title mb-1">Doctors</h5>
                                <h3 class="mb-0">@(Model?.Doctors?.Count() ?? 0)</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Patient Count Card -->
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="me-3">
                                <span class="badge bg-info rounded-circle p-3">
                                    <i class="bi bi-person fs-4"></i>
                                </span>
                            </div>
                            <div>
                                <h5 class="card-title mb-1">Patients</h5>
                                <h3 class="mb-0">@(Model?.Patients?.Count() ?? 0)</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Line Chart for 7-Day Appointment Stats -->
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">7-Day Appointment Trends</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="appointmentChart" height="300"></canvas>
                    </div>
                </div>
            </div>
        }
        else
        {
            <!-- Tables Column -->
            <div class="col-md-8">
                @if (ViewBag.ActiveTab == "Patient")
                {
                    <!-- Patients Table -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Patients</h5>
                        </div>
                        <div class="card-body">
                            @if (Model?.Patients != null && Model.Patients.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered datatable">
                                        <thead class="table-success">
                                            <tr>
                                                <th>No.</th>
                                                <th>Name</th>
                                                <th>Email</th>
                                                <th>Age</th>
                                                <th>Join Date</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var patient in Model.Patients)
                                            {
                                                <tr>
                                                    <td>@(++patientIndex).</td>
                                                    <td>@patient.Name</td>
                                                    <td>@patient.Email</td>
													<td>@patient.Age</td>
                                                    <td>@patient.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No patients found.</p>
                            }
                        </div>
                    </div>
                }
                else if (ViewBag.ActiveTab == "Doctor")
                {
                    <!-- Doctors Table -->
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">Doctors</h5>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addDoctorModal">
                                <i class="bi bi-plus-circle"></i> Add Doctor
                            </button>
                        </div>
                        <div class="card-body">
                            @if (Model?.Doctors != null && Model.Doctors.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered datatable">
                                        <thead class="table-success">
                                            <tr>
                                                <th>No.</th>
                                                <th>Doctor</th>
                                                <th>Email</th>
												<th>Age</th>
                                                <th>Join Date</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var doctor in Model.Doctors)
                                            {
                                                <tr>
                                                    <td>@(++doctorIndex).</td>
                                                    <td>@doctor.Name</td>
                                                    <td>@doctor.Email</td>
                                                    <td>@doctor.Age</td>
                                                    <td>@doctor.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No doctors found.</p>
                            }
                        </div>
                    </div>
                }
                else if (ViewBag.ActiveTab == "Appointment")
                {
                    <!-- Appointments Table -->
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Appointments</h5>
                        </div>
                        <div class="card-body">
                            @if (Model?.Appointments != null && Model.Appointments.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered datatable">
                                        <thead class="table-success">
                                            <tr>
                                                <th>No.</th>
                                                <th>Patient</th>
                                                <th>Doctor</th>
                                                <th>Appointment Date</th>
                                                <th>Created At</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var appointment in Model.Appointments)
                                            {
                                                <tr>
                                                    <td>@(++index).</td>
                                                    <td>@appointment.patientName</td>
                                                    <td>@appointment.doctorName</td>
                                                    <td>@appointment.AppointmentDate.ToString("yyyy-MM-dd h:mm tt")</td>
                                                    <td>@appointment.CreatedAt.ToString("yyyy-MM-dd h:mm tt")</td>
                                                    <td>
                                                        <button type="button" class="btn btn-sm w-100 btn-warning me-2 mb-2" onclick="editAppointment('@appointment.AppointmentID')">
                                                            <i class="bi bi-pencil"></i> Edit
                                                        </button>
                                                        <button type="button" class="btn btn-sm w-100 btn-danger" onclick="deleteAppointment('@appointment.AppointmentID')">
                                                            <i class="bi bi-trash"></i> Delete
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No appointments found.</p>
                            }
                        </div>
                    </div>
                }
            </div>

            <!-- Bar Chart for 7-Day Appointment Stats -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">7-Day Appointment Stats</h5>
                    </div>
                    <div class="card-body">
                        <canvas id="appointmentChart" height="300"></canvas>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Edit Appointment Modal -->
<div class="modal fade" id="editAppointmentModal" tabindex="-1" aria-labelledby="editAppointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAppointmentModalLabel">Edit Appointment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editAppointmentForm">
                    <input type="hidden" id="editAppointmentId" />
                    <div class="mb-3">
                        <label for="editPatientSelect" class="form-label">Patient</label>
                        <select class="form-select" id="editPatientSelect" required>
                            <option value="">Select Patient</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editDoctorSelect" class="form-label">Doctor</label>
                        <select class="form-select" id="editDoctorSelect" required>
                            <option value="">Select Doctor</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editAppointmentDate" class="form-label">Appointment Date</label>
                        <input type="datetime-local" class="form-control" id="editAppointmentDate" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveAppointment()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Doctor Modal -->
<div class="modal fade" id="addDoctorModal" tabindex="-1" aria-labelledby="addDoctorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addDoctorModalLabel">Add New Doctor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addDoctorForm">
                    <div class="mb-3">
                        <label for="doctorName" class="form-label">Doctor Name</label>
                        <input type="text" class="form-control" id="doctorName" required>
                    </div>
                    <div class="mb-3">
                        <label for="doctorEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="doctorEmail" required>
                    </div>
                    <div class="mb-3">
                        <label for="doctorAge" class="form-label">Age</label>
                        <input type="number" class="form-control" id="doctorAge" required>
                    </div>
                    <div class="mb-3">
                        <label for="doctorPassword" class="form-label">Password</label>
                        <input type="password" class="form-control" id="doctorPassword" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveDoctor()">Add Doctor</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- DataTables, Chart.js, and SweetAlert2 CDNs -->
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/datatables.net@1.12.1/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/datatables.net-bs5@1.12.1/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/datatables.net-bs5@1.12.1/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" />

    <script>
        $(document).ready(function () {
            $('.datatable').DataTable({
                responsive: true,
                pageLength: 10,
                lengthMenu: [5, 10, 25, 50],
                order: [[3, 'desc']]
            });

            const ctx = document.getElementById('appointmentChart').getContext('2d');
            const labels = @Html.Raw(JsonConvert.SerializeObject(labels));
            const data = @Html.Raw(JsonConvert.SerializeObject(data));

            new Chart(ctx, {
                type: '@(ViewBag.ActiveTab == "Home" ? "line" : "bar")',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Appointments in Last 7 Days',
                        data: data,
                        backgroundColor: '@(ViewBag.ActiveTab == "Home" ? "rgba(54, 162, 235, 0.2)" : "rgba(54, 162, 235, 0.6)")',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                        fill: '@(ViewBag.ActiveTab == "Home" ? true : false)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
        });

        function editAppointment(appointmentId) {
            $.ajax({
                url: '/Dashboard/GetAppointment',
                type: 'GET',
                data: { id: appointmentId },
                success: function (response) {
                    if (response.success) {
                        $('#editAppointmentId').val(response.appointment.appointmentID);
                        $('#editAppointmentDate').val(response.appointment.appointmentDate);

                        const patientSelect = $('#editPatientSelect');
                        patientSelect.empty().append('<option value="">Select Patient</option>');
                        response.patients.forEach(function (patient) {
                            const selected = patient.value === response.appointment.patientID ? 'selected' : '';
                            patientSelect.append(`<option value="${patient.value}" ${selected}>${patient.text}</option>`);
                        });

                        const doctorSelect = $('#editDoctorSelect');
                        doctorSelect.empty().append('<option value="">Select Doctor</option>');
                        response.doctors.forEach(function (doctor) {
                            const selected = doctor.value === response.appointment.doctorID ? 'selected' : '';
                            doctorSelect.append(`<option value="${doctor.value}" ${selected}>${doctor.text}</option>`);
                        });

                        $('#editAppointmentModal').modal('show');
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error loading appointment data.'
                    });
                }
            });
        }

        function saveAppointment() {
            const appointmentData = {
                appointmentID: $('#editAppointmentId').val(),
                patientID: $('#editPatientSelect').val(),
                doctorID: $('#editDoctorSelect').val(),
                appointmentDate: $('#editAppointmentDate').val()
            };

            if (!appointmentData.patientID || !appointmentData.doctorID || !appointmentData.appointmentDate) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Incomplete Form',
                    text: 'Please fill in all fields.'
                });
                return;
            }

            $.ajax({
                url: '/Dashboard/UpdateAppointment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(appointmentData),
                success: function (response) {
                    if (response.success) {
                        $('#editAppointmentModal').modal('hide');
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Appointment updated successfully!',
                            willClose: () => {
                                window.location.href = '/Dashboard/Appointment';
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error updating appointment.'
                    });
                }
            });
        }

        function deleteAppointment(appointmentId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to delete this appointment?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Dashboard/DeleteAppointment',
                        type: 'POST',
                        data: { id: appointmentId },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Deleted!',
                                    text: 'Appointment deleted successfully!',
                                    willClose: () => {
                                        window.location.href = '/Dashboard/Appointment';
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Error deleting appointment.'
                            });
                        }
                    });
                }
            });
        }

        function saveDoctor() {
            const doctorData = {
                name: $('#doctorName').val(),
                email: $('#doctorEmail').val(),
                age: $('#doctorAge').val(),
                password: $('#doctorPassword').val()
            };

            if (!doctorData.name || !doctorData.email || !doctorData.password || !doctorData.age) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Incomplete Form',
                    text: 'Please fill in all fields.'
                });
                return;
            }

            $.ajax({
                url: '/Dashboard/AddDoctor',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(doctorData),
                success: function (response) {
                    if (response.success) {
                        $('#addDoctorModal').modal('hide');
                        $('#addDoctorForm')[0].reset();
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Doctor added successfully!',
                            willClose: () => {
                                window.location.href = '/Dashboard/Doctor';
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error adding doctor.'
                    });
                }
            });
        }

        $('#editAppointmentModal').on('hidden.bs.modal', function () {
            $('#editAppointmentForm')[0].reset();
        });

        $('#addDoctorModal').on('hidden.bs.modal', function () {
            $('#addDoctorForm')[0].reset();
        });
    </script>
}